<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_helper_8cpp_source" xml:lang="en-US">
<title>helper.cpp</title>
<indexterm><primary>src/helper.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_helper_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;../headers/helper.h&quot;</emphasis>
<anchor xml:id="_helper_8cpp_source_1l00002"/>00002 
<anchor xml:id="_helper_8cpp_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>namespace::std;
<anchor xml:id="_helper_8cpp_source_1l00004"/>00004 
<anchor xml:id="_helper_8cpp_source_1l00012"/>00012 <emphasis role="keywordtype">int</emphasis>&#32;Helper::checkIfHashvalExistInFiles(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;fileId,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;hval,&#32;sqlite3&#32;*<link linkend="_sqlite3controller_8cpp_1ad6e663497d2c934364b3bcf07496b30b">db</link>)&#32;{
<anchor xml:id="_helper_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*zErrMsg&#32;=&#32;0;
<anchor xml:id="_helper_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rc;
<anchor xml:id="_helper_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*sql&#32;=&#32;<emphasis role="stringliteral">&quot;SELECT&#32;id&#32;FROM&#32;files&#32;WHERE&#32;id&#32;=&#32;?&#32;AND&#32;hashedvalue&#32;=&#32;?;&#32;&quot;</emphasis>;
<anchor xml:id="_helper_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*&#32;pStmt;
<anchor xml:id="_helper_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;retVal&#32;=&#32;0;
<anchor xml:id="_helper_8cpp_source_1l00018"/>00018 
<anchor xml:id="_helper_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;rc&#32;=&#32;sqlite3_prepare_v3(<link linkend="_sqlite3controller_8cpp_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;sql,&#32;-1,&#32;0,&#32;&amp;pStmt,&#32;NULL);
<anchor xml:id="_helper_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;
<anchor xml:id="_helper_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rc&#32;==&#32;SQLITE_OK)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_helper_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(pStmt,&#32;1,&#32;(<emphasis role="keywordtype">char</emphasis>*)fileId,&#32;-1,&#32;NULL);
<anchor xml:id="_helper_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(pStmt,&#32;2,&#32;hval,&#32;-1,&#32;NULL);
<anchor xml:id="_helper_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_helper_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_helper_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_sqlite3controller_8cpp_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
<anchor xml:id="_helper_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_helper_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;}
<anchor xml:id="_helper_8cpp_source_1l00029"/>00029 
<anchor xml:id="_helper_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(sqlite3_step(pStmt)&#32;==&#32;SQLITE_ROW)
<anchor xml:id="_helper_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;{
<anchor xml:id="_helper_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retVal&#32;=&#32;1;
<anchor xml:id="_helper_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="_helper_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_helper_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;sqlite3_finalize(pStmt);
<anchor xml:id="_helper_8cpp_source_1l00036"/>00036 
<anchor xml:id="_helper_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retVal;
<anchor xml:id="_helper_8cpp_source_1l00038"/>00038 }
<anchor xml:id="_helper_8cpp_source_1l00039"/>00039 
<anchor xml:id="_helper_8cpp_source_1l00045"/>00045 <emphasis role="keywordtype">char</emphasis>*&#32;Helper::getCurrentTime()&#32;{
<anchor xml:id="_helper_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;retVal;
<anchor xml:id="_helper_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;char_array;
<anchor xml:id="_helper_8cpp_source_1l00048"/>00048 
<anchor xml:id="_helper_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;time_t&#32;t&#32;=&#32;time(0);&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;time&#32;now</emphasis>
<anchor xml:id="_helper_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;tm*&#32;now&#32;=&#32;localtime(&amp;t);
<anchor xml:id="_helper_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;date_string[100];
<anchor xml:id="_helper_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;time_string[100];
<anchor xml:id="_helper_8cpp_source_1l00053"/>00053 
<anchor xml:id="_helper_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;strftime(date_string,&#32;50,&#32;<emphasis role="stringliteral">&quot;%B&#32;%d,&#32;%Y&#32;&quot;</emphasis>,&#32;now);
<anchor xml:id="_helper_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;strftime(time_string,&#32;50,&#32;<emphasis role="stringliteral">&quot;%T&quot;</emphasis>,&#32;now);
<anchor xml:id="_helper_8cpp_source_1l00056"/>00056 
<anchor xml:id="_helper_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;retVal&#32;+=&#32;date_string;
<anchor xml:id="_helper_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;retVal&#32;+=&#32;time_string;
<anchor xml:id="_helper_8cpp_source_1l00059"/>00059 
<anchor xml:id="_helper_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;retVal.length();
<anchor xml:id="_helper_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;char_array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[n&#32;+&#32;1];
<anchor xml:id="_helper_8cpp_source_1l00062"/>00062 
<anchor xml:id="_helper_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;strcpy(char_array,&#32;retVal.c_str());
<anchor xml:id="_helper_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;
<anchor xml:id="_helper_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;char_array;
<anchor xml:id="_helper_8cpp_source_1l00066"/>00066 }
</programlisting></section>
